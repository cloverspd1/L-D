<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<link rel="stylesheet" href="/sites/Anugamdev/SiteAssets/AnugamStyles/css/main.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/css/bootstrap-timepicker.min.css"
      rel="stylesheet">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

<link href="/sites/Anugamdev/SiteAssets/AnugamStyles/Datatable/css/dataTables.bootstrap.min.css" rel="stylesheet">
<link href="/sites/Anugamdev/SiteAssets/AnugamStyles/Datatable/css/responsive.bootstrap.min.css" rel="stylesheet">

<link href="/sites/Anugamdev/SiteAssets/AnugamStyles/Datepicker/css/custom.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/css/bootstrap-timepicker.min.css" rel="stylesheet">

<style>
    .errorBorder-color {
        padding: 0px !important;
        color: red;
        font-size: 19px;
        margin-left: 33px;
    }

    .btn-primary {
        color: #fff !important;
        background-color: #337ab7 !important;
        border-color: #2e6da4 !important;
    }

    .btn {
        display: inline-block;
        padding: 6px 12px !important;
        margin-bottom: 0 !important;
        font-size: 14px !important;
        font-weight: 400;
        line-height: 1.42857143;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        -ms-touch-action: manipulation;
        touch-action: manipulation;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        background-image: none;
        border: 1px solid transparent;
        border-radius: 4px;
    }

    .requiredfieldsstyle {
        padding-left: 15px !important;
        font-size: 12px;
        font-style: italic;
    }
     .clear {
        clear: both;
    }

    .opacity-0 {
        opacity: 0;
    }

    .padding-0 {
        padding: 0 !important;
    }

    .margin-0 {
        margin: 0 !important;
    }

    .margin-top-0 {
        margin-top: 0 !important;
    }

    .margin-bottom-0 {
        margin-bottom: 0 !important;
    }

    .margin-top-5 {
        margin-top: 5px !important;
    }

    .margin-top-10 {
        margin-top: 10px !important;
    }

    .margin-top-15 {
        margin-top: 15px !important;
    }

    .form-control-style-1 {
        background-color: #d5ecd5 !important;
        border: 1px solid #a9d4a9 !important;
    }

    .border-style-1 {
        border: 1px solid #e3e3e3;
        padding: 10px;
        border-radius: 4px;
    }

    .requiredfieldsstyle {
        padding-left: 15px !important;
        font-size: 12px;
        font-style: italic;
    }

 
</style>

<div class="col-md-12 margin-top-10 padding-0">

    <div class="col-md-12 padding-0 page-content-header-style-1">
        <h1 style="font-size:25px !Important;margin-left: 12px !Important;margin-right: 0px !Important;margin-top: 0px !Important; margin-bottom: 0px !Important;">
            <b>Day Wise Manual Induction Feedback Form</b>
        </h1>
    </div>
    
    <div class="col-md-12 padding-0">
    
        <div class="col-md-12 padding-0 margin-top-15">
            <div id="divErrorMessage" class="errorBorder-color"></div>
        </div>
        
        <div class="col-md-12 margin-top-15">
            <label>
                Program Name
            </label>
            <div id="divProgramName">
            </div>
        </div>
        
        <div class="col-md-12 margin-top-15 padding-0">
        
            <div class="col-md-4">
                <label>
                    Program Start Date
                </label>
                <input type="text" id="txtProgramStartDate" class="form-control" readonly="readonly" />
            </div>
            
            <div class="col-md-4">
                <label>
                    Program End Date
                </label>
                <input type="text" id="txtProgramEndDate" class="form-control" readonly="readonly" />
            </div>
            
            <div class="col-md-4">
                <label>
                    Program Location
                </label>
                <input id="txtProgramLocation" class="form-control clearTextboxData" readonly="readonly" />
            </div>
        <br/>
        <br/>    
        </div>
        
            <div class="col-md-4" id="divActivityShow" style="padding-top: 10px;">
                <label>
                    Day
                </label>
                <select id="divActivityName" class="form-control"></select>
            </div>
         
        <div class="col-md-4" style="padding-top: 10px;">
            <label>
                Employee Name
            </label>
            <input type="text" id="txtEmployeeName" maxlength="50" class="form-control RequiredField clearTextboxData" />
        </div>
        
        <div class="col-md-4" style="padding-top: 10px;">
            <label>
                Employee Code
            </label>
            <input type="text" id="txtEmployeeCode" maxlength="50" class="form-control RequiredField clearTextboxData" />
        </div>


    </div>
    
    <div class="clear">
    </div>
    
    </div>
    
    
     <div class=" clear"></div>
    <div class="padding-0-xs margin-top-15" id="speakerdetialsbind">
    </div>

    <div class=" clear"></div>
    <div class="col-md-12 margin-top-15 padding-0-xs">
   

            <div id="divErrorMessage" class="requiredfieldsstyle"></div><br/>
        
        
        <div class="col-md-2">
            <button class="btn btn-success btn-block btncls" style="margin-left:-30px;" id="btnSubmit" type="button">
                SUBMIT
            </button>
        </div>


    </div>




<div id="throbber" style="display:none;">
<img src="https://bajajelect.sharepoint.com/sites/HR-TrainingManagementSystem/SiteAssets/AnugamStyles/img/712_1.gif" /><br/></br><h3><b style="color:#0072c6 !Important;font-size:32px">Please Wait...</b><h3></div>

<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.4.0/bootbox.min.js">
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.0.0/jquery.min.js"></script>
<!-- Latest compiled and minified JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<script src="/sites/Anugamdev/SiteAssets/AnugamStyles/Datepicker/js/moment.min.js"></script>
<script src="/sites/Anugamdev/SiteAssets/AnugamStyles/Datepicker/js/daterangepicker.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/js/bootstrap-timepicker.js"></script>


<script src="https://bajajelect.sharepoint.com/sites/AnugamUAT/SiteAssets/Webparts/alluploadreferences/jquery.blockUI.js"></script>
<!-- bootstrap-daterangepicker -->
<script>
    $(document).ready(function () {
        PopulateProgramDropDown();
      $('#btnSubmit').hide();
  });
 		

    function PopulateProgramDropDown() {
        var listName = "NewInductionProgram";
        var url = _spPageContextInfo.webAbsoluteUrl;
        var UserEmail = LoginUserEmail();
        getProgram(UserEmail, listName, url, function (data) {
            var TodayDate = new Date();
            var items = data.d.results;
            var pgmFinalData = []; var j = 0;
            var arrPGM = [];
            var arrPGMUnique = [];
            for (var k = 0; k < items.length; k++) {
                var ChkProgramEndDate = new Date(items[k].ProgramEndDate.split("/").reverse().join("-"));
                var CreatedDate = new Date(items[k].CreatedDateCal.split("/").reverse().join("-"));
                //if (new Date(items[k].ProgramEndDate.split("/").reverse().join("-")) >= TodayDate || ChkProgramEndDate.setHours(0, 0, 0, 0) == TodayDate.setHours(0, 0, 0, 0) || CreatedDate >= ChkProgramEndDate) {
                    var NameProgram = items[k].ProgramName;
                    if (pgmFinalData[j++] != NameProgram) {
                        pgmFinalData[j++] = NameProgram;
                    }
                //}
            }
            var uniqueProgramNames = '';
            var result = [];
            $.each(pgmFinalData, function (index, pgmFinalData) {
                if ($.inArray(pgmFinalData, result) == -1) {
                    result.push(pgmFinalData);
                }
            });
            console.log(ChkProgramEndDate);
            //var programBind = GroupByProgramData(pgmFinalData, 'ProgramName');
            var inputElement = '<select id="ddlProgramName" class="form-control RequiredField"><option  value="--Select Program--">--Select Program--</option>';
            // Add all the new items
            for (var i = 0; i < result.length; i++) {
                if (result[i] != undefined) {
                    var itemId = result[i],
                        itemVal = result[i];
                    inputElement += '<option value="' + itemVal + '"selected>' + itemId + '</option>';
                }
            }
            inputElement += '</select>';
            $('#divProgramName').append(inputElement);
            $("#ddlProgramName").each(function () {
                $('option', this).each(function () {

                    if ($(this).text() == '--Select Program--') {
                        $(this).attr('selected', 'selected')
                    };
                });
            });
            $('#ddlProgramName').on('change', function () {
                var selectedProgramName = $(this).val();
                 var listName = "NewInductionProgram";
      			  var url = _spPageContextInfo.webAbsoluteUrl;

                $("#txtProgramLocation").val('');
                $("#txtProgramStartDate").val('');
                $("#txtProgramEndDate").val('');
                $('#txtSpeakerName').val('');
                $.blockUI.defaults.css = {		
											padding: 0,		
								            margin: 0,		
								            width: '30%',		
								            top: '40%',		
								            left: '35%',		
								            textAlign: 'center',
								            cursor: 'wait'};
								            
		       $.blockUI.defaults.overlayCSS.backgroundColor = '#fff';
		       $.blockUI.defaults.overlayCSS.opacity = 0.9;
		       $.blockUI.defaults.overlayCSS.cursor = 'pointer';
								            
		       
                $.blockUI({message: $('#throbber')});
                
                
                setTimeout(function () {
                  getProgramLocation(selectedProgramName);
                    //getBindData_1(selectedProgramName);
                    //getBindData(selectedProgramName);
                    
                    ChangeProgram(selectedProgramName, url, listName);
                   
                    $.unblockUI({
                        onUnblock: function () {
                            console.log('');
                        }
                    });
                }, 600);              
                var SpeakerName = getSpeakerName(selectedProgramName);
                if (SpeakerName != '' && SpeakerName != null) {
                    $('#txtSpeakerName').val(SpeakerName);
                }
            });

        }, function (data) {
            alert("An error occured while getting ConfigParameters. Please try again");
        });
    }
    
    
    
    var abc1=''
    function ChangeProgram(selectedProgramName, url, listName)
    {
          
        GetActivityLookUpId('NewInductionProgram', url, selectedProgramName, function (data) {
            console.log(data.d.results);
            var items = data.d.results;
           var taskNames = GroupByData(items, 'DayWise');
           abc1=taskNames;
            //alert(abc1);
            $('#divActivityName').empty();
            //var inputElement = '<select id="ddlActivityName" class="form-control"><option  value="">Select</option>';
            // Add all the new items
            var select = document.getElementById("divActivityName");
            var el = document.createElement("option");
            el.textContent = '--Select Day--';
            el.value = '--Select Day--';
            select.appendChild(el);
            for (var i = 0; i < taskNames.length; i++) {

                var el = document.createElement("option");
                el.textContent = taskNames[i];
                el.value = taskNames[i];
                //el.defaultSelected=true;//cmnt
                //alert(taskNames[i]);
                //$(el).find('option[value="' + taskNames[i] + '"]').attr("selected", "selected");
                //$('.el option[value="' + taskNames[i] + '"]').attr('selected','selected');
               // $('#el').val('someValue');
                //$('#el option:selected').attr('defaultSelected','true')//cmnt
                
                select.appendChild(el);
                //select.val(el.value);
                //$(el).find('option[value="' + taskNames[i] + '"]').attr("selected", "selected");

            }
            
        }, function (data) {
            alert('An error occured while getting ConfigParameters. Please try again');
        });
    }
    
    function GetToday() {
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!
        var yyyy = today.getFullYear();
        if (dd < 10) {
            dd = '0' + dd
        }
        if (mm < 10) {
            mm = '0' + mm
        }
        today = dd + '/' + mm + '/' + yyyy;
        return today;
    }


function GroupByData(items, propertyName) {
        var result = [];
        $.each(items, function (index, item) {
            if ($.inArray(item[propertyName], result) == -1) {
                result.push(item[propertyName]);
            }
        });
        return result;
    }

    
    function GetActivityLookUpId(listName, siteurl, selectedProgramName, success, failure) {
        var UserEmail = LoginUserEmail();
        var toDay = GetToday();
        var url = siteurl + "/_vti_bin/listdata.svc/" + listName + "?$filter=ProgramName eq %27" + selectedProgramName + "%27 and CreatedByUser eq %27" + UserEmail + "%27";
        //"/_api/web/lists/getbytitle('" + listName + "')/items?$filter=ProgramName eq %27" + selectedProgramName + "%27%20and%20CreatedByUser%20eq%20%27" + UserEmail + "%27";
        $.ajax({
            url: url,
            method: "GET",
            headers: { "Accept": "application/json; odata=verbose" },
            success: function (data) {
                success(data);
            },
            error: function (data) {
                failure(data);
            }
        });
    }




var activityID = []; iactivityID = 0; var arrSequnce = []; iarrSequnce = 0; var arrSaveActId = []; iarrSaveActId = 0;
    var arractivityName = []; iarractivityName = 0; var activityUniID = []; iactivityUniID = 0;

function getDayWiseFeedback(ActDay,selectedProgramName) {

 $.ajax({
            url: _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('NewInductionProgram')/items?$filter=DayWise eq %27" + ActDay + "%27and%20FeedBackNeed%20eq%20%27Yes%27&$orderby=actSequence%20asc",
            type: "GET",
            async: false,
            headers: {
                "accept": "application/json;odata=verbose",
                "content-type": "application/json;odata=verbose",
                "X-RequestDigest": $("#__REQUESTDIGEST").val()
            },
            success: function (d) {
                var arr = [];
                i = 0;
                $.each(d.d.results, function (index, results) {
                    if (results.Status == "Active" && results.ProgramName == selectedProgramName) {
                        arr[i++] = index;
                    }
                });
                for (var i = 0; i < arr.length; i++) {
                    var arrKey = arr[i];
                    activityID = d.d.results[arrKey].ActivityID;
                    arractivityName[iarractivityName++] = d.d.results[arrKey].ActivityName;
                    arrSaveActId[iarrSaveActId++] = d.d.results[arrKey].ActivityID;
                    arrSequnce[iarrSequnce++] = d.d.results[arrKey].actSequence;
                    activityUniID[iactivityUniID++] = d.d.results[arrKey].ID;
                    var ProgramStartDate = d.d.results[0].ProgramStartDate;
                    var ProgramEndDate = d.d.results[0].ProgramEndDate;
                    //$('#PSdate').val(ProgramStartDate);
                    //$('#PEdate').val(ProgramEndDate);

                    var SpeakerOrder = i + 1;
                    GetSpeakerDetailsBind(activityID, SpeakerOrder);
                }
            },
            error: function (err) {
                alert("Error while adding item: " + JSON.stringify(err));
            }
        });


}



var Sequence = ""; var arrSequence = [];
    function GetSpeakerDetailsBind(activityID, SpeakerOrder) {
        $.ajax({
            url: _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('FeedBackDetails')/items?$filter=ActiviTyID eq %27" + activityID + "%27",
            type: "GET",
            async: false,
            headers: {
                "accept": "application/json;odata=verbose",
                "content-type": "application/json;odata=verbose",
                "X-RequestDigest": $("#__REQUESTDIGEST").val()
            },
            success: function (d) {
                
                 var arr = [];
            i = 0;
            $.each(d.d.results, function (index, results) {
                if (results.Status == "Active") {
                    arr[i++] = index;
                }
            });
              for (var j = 0; j < arr.length; j++) {
                   var arrConfigK = arr[j];
                   //alert(arrConfigK);
                   
                   if(arrConfigK<=0){
                var SpeakerName = d.d.results[arrConfigK].NameOfTheSpeaker +",";
                var SpeakerEmail = d.d.results[arrConfigK].SpeakerEmail +",";
                var EmployeeCode = d.d.results[arrConfigK].EmployeeCode +",";
                if(d.d.results[arrConfigK].SpeakerDepartment == null)
                {
                var SpeakerDepartment = "NA,";
                }
                else
                {
                var SpeakerDepartment = d.d.results[arrConfigK].SpeakerDepartment +",";
                }
               // alert(SpeakerDepartment)
                
                Sequence = d.d.results[arrConfigK].ActiviTyID;
                 }
                 else if(arrConfigK>=1){

                var SpeakerName = SpeakerName + d.d.results[arrConfigK].NameOfTheSpeaker +",";
                var SpeakerEmail = SpeakerEmail +  d.d.results[arrConfigK].SpeakerEmail +",";
                var EmployeeCode = EmployeeCode + d.d.results[arrConfigK].EmployeeCode +",";
                
                if(d.d.results[arrConfigK].SpeakerDepartment ==null)
                {
                var SpeakerDepartment = "NA,"
                }
                else
                {
                var SpeakerDepartment = SpeakerDepartment + d.d.results[arrConfigK].SpeakerDepartment +",";
                }
                Sequence = d.d.results[arrConfigK].ActiviTyID;
                 }

                 //var SpeakerName = $.trim($('SpeakerName').val());
  
                
              }
              var lastChar = SpeakerName.slice(-1);
  if (lastChar == ',') {
  SpeakerName = SpeakerName.slice(0, -1);
  }
   var lastChar1 = SpeakerEmail.slice(-1);
  if (lastChar1 == ',') {
  SpeakerEmail = SpeakerEmail.slice(0, -1);
  }
   var lastChar2 = EmployeeCode.slice(-1);
  if (lastChar2 == ',') {
  EmployeeCode = EmployeeCode.slice(0, -1);
  }
   var lastChar3 = SpeakerDepartment.slice(-1);
  if (lastChar3 == ',') {
  SpeakerDepartment = SpeakerDepartment.slice(0, -1);
  }
   


                 $("#speakerdetialsbind").append('<div class="FormValidations well padding-0-xs SpeakerSeq-' + Sequence + '" id=' + Sequence + '><div class="col-md-12 margin-top-15 padding-0">'
                    + '<div class="col-md-4"><label>Speaker Name</label><p class="form-control form-control-style-1 spkcls" style="overflow: auto;" id=SpeakerName' + Sequence + '>' + SpeakerName + '</p></div>'
                    + '<div class="col-md-3" style="display:none"><label>Speaker Email</label><p class="form-control form-control-style-1" id=SpeakerEmail' + Sequence + '>' + SpeakerEmail + '</p></div><div class="col-md-3" style="display:none">'
                    + '<label>Speaker Ecode</label><p class="form-control form-control-style-1" id=SpeakerECode' + Sequence + '>' + EmployeeCode + '</p></div><div class="col-md-4"><label> Speaker Department</label><p class="form-control form-control-style-1" style="width:100%;overflow-x: auto;overflow-y: auto;" id=SpeakerDept' + Sequence + '>' + SpeakerDepartment + '</p></div></div>'
                    + '<div class="col-md-12 margin-top-15 padding-0"><div class="col-md-12"><div class="col-md-12 border-style-1"><div class="col-md-7"><label class="margin-bottom-0" id=' + Sequence + '>Q1 . Content/Presentation (relevance, adherence to timeline)</label></div>'
                    + '<div class="col-md-5"><div class="FormValidationsRadio col-md-12 padding-0 validationContent' + Sequence + '" id="validationContent' + Sequence + '"><label class="radio-inline"><input type="radio" title="contentData' + Sequence + ' " class="contentData radioChecked1"  name="ContentRelevance' + Sequence + '" value="Can Do Better" id=' + Sequence + ' >Can Do Better</label><label class="radio-inline">'
                    + '<input type="radio" class="contentDatahide radioChecked1" name="ContentRelevance' + Sequence + '" value="Satisfactory" id=' + Sequence + ' >Satisfactory</label><label class="radio-inline"><input type="radio" class="contentDatahide radioChecked1" name="ContentRelevance' + Sequence + '" value="Good" id=' + Sequence + ' >Good</label><label class="radio-inline">'
                    + '<input type="radio" class="contentDatahide radioChecked1" name="ContentRelevance' + Sequence + '" value="Excellent" id=' + Sequence + ' >Excellent</label></div></div></div></div>'
                    + '<div class="col-md-12"><div class=" col-md-12 margin-top-10  border-style-1"><div class="col-md-7"><label class="margin-bottom-0" id=' + Sequence + '>Q2 . Speakers ability to engage, share knowledge & respond to questions</label></div><div class="col-md-5">'
                    + '<div class="FormValidationsRadio col-md-12 padding-0 validationSpeaker' + Sequence + '" id="validationSpeaker' + Sequence + '"><label class="radio-inline"><input title="contentData' + Sequence + ' " class="contentData radioChecked2" type="radio" name="SpeakerAbility' + Sequence + '" id=' + Sequence + ' value="Can Do Better">Can Do Better</label><label class="radio-inline"><input  class="contentDatahide radioChecked2" type="radio" name="SpeakerAbility' + Sequence + '" id=' + Sequence + ' value="Satisfactory">'
                    + 'Satisfactory</label><label class="radio-inline"><input type="radio" class="contentDatahide radioChecked2" name="SpeakerAbility' + Sequence + '" id=' + Sequence + ' value="Good">Good</label><label class="radio-inline"><input type="radio" class="contentDatahide radioChecked2" name="SpeakerAbility' + Sequence + '" id=' + Sequence + ' value="Excellent">Excellent</label></div></div></div></div>'
                    + '<div class="col-md-12"><div class=" col-md-12 margin-top-10  border-style-1"><div class="col-md-7"><label class="margin-bottom-0" id=' + Sequence + '>Q3 . Overall rating</label></div><div class="col-md-5"><div class="FormValidationsRadio col-md-12 padding-0 validationRating' + Sequence + '" id="validationRating' + Sequence + '">'//new
					+ '<label class="radio-inline"><input title="contentData' + Sequence + ' " class="contentData radioChecked3" type="radio" name="OverallRating' + Sequence + '" id=' + Sequence + ' value="Can Do Better">Can Do Better</label><label class="radio-inline"><input  class="contentDatahide radioChecked3" type="radio" name="OverallRating' + Sequence + '" id=' + Sequence + ' value="Satisfactory">'+ 'Satisfactory</label><label class="radio-inline"><input type="radio" class="contentDatahide radioChecked3" name="OverallRating' + Sequence + '" id=' + Sequence + ' value="Good">Good</label><label class="radio-inline"><input type="radio" class="contentDatahide radioChecked3" name="OverallRating' + Sequence + '" id=' + Sequence + ' value="Excellent">Excellent</label></div></div></div></div>'//new
                    + '<div class="col-md-12 padding-0 margin-top-10" id="divCanDoBetter' + Sequence + '" style="display:none"><div class="col-md-12" ><textarea class="form-control CandobetterValidation"  maxlength="150" placeholder="Suggestions to Improve" id="txtCanDoBetter' + Sequence + '"></textarea></div></div></div><div class=" clear"></div></div>');
                    
              
            },
            error: function () { console.log('fail'); }
        });
    }
    

  

    
      $('#divActivityName').change(function () {
    
   

		        $("#divErrorMessage").empty();
		        $('#CustomerGrid').empty();
		        var ActDay = $(this).val();
		        //var selectedProgramName = $('#ProgramNameDynDropDown').val();
		        
		        var selectedProgramName = $('#ddlProgramName').val();
		        
		        
		         $.blockUI.defaults.css = {		
											padding: 0,		
								            margin: 0,		
								            width: '30%',		
								            top: '40%',		
								            left: '35%',		
								            textAlign: 'center',
								            cursor: 'wait'};
								            
		       $.blockUI.defaults.overlayCSS.backgroundColor = '#fff';
		       $.blockUI.defaults.overlayCSS.opacity = 0.9;
		       $.blockUI.defaults.overlayCSS.cursor = 'pointer';
								            
		       
                $.blockUI({message: $('#throbber')});
                
                
                setTimeout(function () {
                
		        //getEmailIdOfUser(selectedProgramName, ActDay);
		        getDayWiseFeedback(ActDay,selectedProgramName);
        
         $.unblockUI({
                        onUnblock: function () {
                            console.log('');
                        }
                    });
                }, 600);


    });
    
         
    $('#speakerdetialsbind').on('change','.contentData',function(){
        var value = $(this).val();
        var Seq = this.id;
        var i = 0;
        document.getElementById("divCanDoBetter" + Seq + "").style.display = "block";
        if(Seq != null && Seq > 0 && Seq != undefined)
        {
        $('.FormValidationsRadio').css({ "border": "" });
            $("#divErrorMessage").empty();
            }


    });
    
    


   $('#speakerdetialsbind').on('change','.contentDatahide',function(){
        var value = $(this).val();
        var Seq = this.id;
        var len = 0;
        var name = $(this).attr('name');
        var lastChar = name[name.length - 1];
        var type1 = 'ContentRelevance' + Seq;
        var type2 = 'SpeakerAbility' + Seq;
        var type3 = 'OverallRating' + Seq;//new
        
        $('input[name="' + type1 + '"]').each(function () {
            var value = $(this).val();
            if (value == 'Can Do Better') {
                var v = $(this).is(':checked');
                if (v == true) {
                    len++;
                }
            }
        });
        $('input[name="' + type2 + '"]').each(function () {
            var value = $(this).val();
            if (value == 'Can Do Better') {
                var v = $(this).is(':checked');
                if (v == true) {
                    len++;
                }
            }
        });
        
        //new
         $('input[name="' + type3 + '"]').each(function () {
            var value = $(this).val();
            if (value == 'Can Do Better') {
                var v = $(this).is(':checked');
                if (v == true) {
                    len++;
                }
            }
        });//end


        if (len == 0) {
            document.getElementById("divCanDoBetter" + Seq + "").style.display = "none";
            $('.FormValidationsRadio').css({ "border": "" });
            $("#divErrorMessage").empty();
        }
        else {
            document.getElementById("divCanDoBetter" + Seq + "").style.display = "block";
            $('.FormValidationsRadio').css({ "border": "" });
            $("#divErrorMessage").empty();
        }
    });

    $('input[type=radio][name=SpeakerAbility]').change(function () {
        var Seq = "";
        if (this.value == 'Can Do Better') {
            if (arrSequnce.length > 0) {
                for (var i = 0; i < arrSequnce.length; i++) {
                    Seq = arrSequnce[i];
                    if (this.id == Seq.toString()) {
                        document.getElementById("divCanDoBetter" + Seq + "").style.display = "block";
                    }
                }
            }
        }
        else {
            var Seq = "";
            if (arrSequnce.length > 0) {
                for (var i = 0; i < arrSequnce.length; i++) {
                    Seq = arrSequnce[i];
                    if (this.id == Seq.toString()) {
                        document.getElementById("divCanDoBetter" + Seq + "").style.display = "none";
                    }
                }
            }
        }
    });
    
   
    
      $('#speakerdetialsbind').on('change','.CandobetterValidation',function(){

            if ($(this).is(':hidden') == false && $(this).val() == '') {
                $('.CandobetterValidation').css({ "border": "1px solid red" });
                $("#divErrorMessage").empty();
                $('#divErrorMessage').css('color', 'red');
                $('#divErrorMessage').append("Highlighted fields are mandatory");
                return false;
            }
            else if ($(this).val() != '') {
            var seq = this.id;
                $("#" + seq ).css({ "border": "" });
                $("#divErrorMessage").empty();
            }
});


  
    function getSpeakerName(ProgramName) {
        var SpeakerName = '';
        var Spkr='';
        var RestUrl = _spPageContextInfo.siteAbsoluteUrl + "/_api/web/lists/getbytitle('NewInductionProgram')/items?$filter=Status%20eq%20%27Active%27and%20ProgramName%20eq%20%27" + ProgramName + "%27 and FeedBackNeed eq 'Yes'";
        $.ajax({
            url: RestUrl,
            method: "GET",
            async: false,
            headers: {
                "accept": "application/json;odata=verbose",
            },
            success: function (d) {
                var arr = [];
                i = 0;
                $.each(d.d.results, function (index, results) {
                    arr[i++] = index;
                });
                for (var k = 0; k < arr.length; k++) {
                    var arrK = arr[k];
                    if (d.d.results[arrK].ProgramName == ProgramName) {
                        var ActivityID = d.d.results[arrK].ActivityID;
                        SpeakerName = getSpeakerNameOnActivityID(ActivityID);
                         Spkr= Spkr + SpeakerName + ",";
                    }
                }
                  if(Spkr != '')
                {
                var lastChar = Spkr.slice(-1);
                if (lastChar == ',') {
                SpeakerName = Spkr.slice(0, -1);
                }
                //alert(SpeakerName);
                }

            },
            error: function () { console.log('fail'); }
        });
        return SpeakerName;
    }
    function getSpeakerNameOnActivityID(ActivityID) {
        var SpeakerName = '';
        var RestUrl = _spPageContextInfo.siteAbsoluteUrl + "/_api/web/lists/getbytitle('FeedBackDetails')/items?$filter=ActiviTyID eq '" + ActivityID + "'";
        $.ajax({
            url: RestUrl,
            method: "GET",
            async: false,
            headers: {
                "accept": "application/json;odata=verbose",
            },
            success: function (d) {
              //  if (d.d.results.length > 0) {
                //    SpeakerName = d.d.results[0].NameOfTheSpeaker;
                //}
                  var arr = [];
            i = 0;
            $.each(d.d.results, function (index, results) {
                if (results.Status == "Active") {
                    arr[i++] = index;
                }
            });
			for (var j = 0; j < arr.length; j++) {
                   var arrConfigK = arr[j];
                    if(arrConfigK<=0){
                        SpeakerName = d.d.results[arrConfigK].NameOfTheSpeaker + ",";
                    }
                    else if(arrConfigK>=1){
                        SpeakerName = SpeakerName + d.d.results[arrConfigK].NameOfTheSpeaker + ",";
                    }
              }
               var lastChar = SpeakerName.slice(-1);
                if (lastChar == ',') {
                SpeakerName = SpeakerName.slice(0, -1);
                }

            },
            error: function () { console.log('fail'); }
        });
        return SpeakerName;
    }
    function getProgram(UserEmail, listName, siteurl, success, failure) {

        var urlTest = siteurl + "/_vti_bin/listdata.svc/" + listName + "?$filter=CreatedByUser eq %27" + UserEmail + "%27 and Status eq 'Active' and FeedBackNeed eq 'Yes' and InductionProgram eq 'Yes'&$orderby= Created desc";
        $.ajax({
            url: urlTest,
            method: "GET",
            headers: { "Accept": "application/json; odata=verbose" },
            success: function (data) {
                success(data);
            },
            error: function (data) {
                failure(data);
            }
        });
    }
    function getProgramLocation(selectedProgramName) {
        var RestUrl = _spPageContextInfo.siteAbsoluteUrl + "/_api/web/lists/getbytitle('NewInductionProgram')/items?$top=1000&?filter=Status%20eq%20%27Active%27and%20ProgramName%20eq%20%27" + selectedProgramName + "%27";
        $.ajax({
            url: RestUrl,
            method: "GET",
            async: false,
            headers: {
                "accept": "application/json;odata=verbose",
            },
            success: function (d) {
                var arr = [];
                i = 0;
                $.each(d.d.results, function (index, results) {
                    arr[i++] = index;
                });
                for (var k = 0; k < arr.length; k++) {
                    var arrK = arr[k];
                    if (d.d.results[arrK].ProgramName == selectedProgramName) {
                        var PgrmLocation = d.d.results[arrK].ProgramLocation;
                        var PgrmStartDate = d.d.results[arrK].ProgramStartDate;
                        var PgrmEndDate = d.d.results[arrK].ProgramEndDate;
                        $("#txtProgramLocation").val(PgrmLocation);
                        $("#txtProgramStartDate").val(PgrmStartDate);
                        $("#txtProgramEndDate").val(PgrmEndDate);
                        break;
                    }
                }
            },
            error: function () { console.log('fail'); }
        });
    }
</script>
<script>
    var currentuserEmailID = "";
    function LoginUserEmail() {
        $.ajax({
            async: false,
            url: _spPageContextInfo.webServerRelativeUrl +
                 "//_api/SP.UserProfiles.PeopleManager/GetMyProperties?$select=email",
            method: "GET",
            headers: {
                "accept": "application/json;odata=verbose"
            },
            success: function (d) {
                currentuserEmailID = d.d.Email;

            },
            error: function (err) {
                alert(JSON.stringify(err));
            }
        });
        return currentuserEmailID;
    }
</script>

<script>
   
    

    function clearData() {
        //$('input:radio[name=Facilities]').attr('checked', false);
        //$('input:radio[name=ProgramContent]').attr('checked', false);
        //$('input:radio[name=TasksActivities]').attr('checked', false);
        //$('input:radio[name=ProgramUtility]').attr('checked', false);
        //$('input:radio[name=TrainerAbilityEncourage]').attr('checked', false);
        //$('input:radio[name=TrainerAbilityCommunicate]').attr('checked', false);
        $(".commonCSSForRadio").each(function (i) {
            this.checked = false;
        });
        $('.clearTextboxData').each(function () {
            $(this).val('');
        });
    }
    function IsValidData() {
        isValid = true;
        $('.RequiredField').each(function () {
            if ($.trim($(this).val()) == '' || $.trim($(this).val()) == '--Select Program--') {
                isValid = false;
                $(this).css({
                    "border": "1px solid red"
                });
            }
            else {
                $(this).css({
                    "border": ""
                });
            }
        });
        if ($('input[name="InductionUndt"]:checked').length == 0) {
            isValid = false;
            $('.clsInductionUndt').css({
                "border": "1px solid red"
            });
        }
        else {
            $('.clsInductionUndt').css({
                "border": ""
            });
        }
        if ($('input[name="InductionValInfo"]:checked').length == 0) {
            isValid = false;
            $('.clsInductionValInfo').css({
                "border": "1px solid red"
            });
        }
        else {
            $('.clsInductionValInfo').css({
                "border": ""
            });
        }
        if ($('input[name="InductionQueries"]:checked').length == 0) {
            isValid = false;
            $('.clsInductionQueries').css({
                "border": "1px solid red"
            });
        }
        else {
            $('.clsInductionQueries').css({
                "border": ""
            });
        }
        if ($('input[name="InductionTime"]:checked').length == 0) {
            isValid = false;
            $('.clsInductionTime').css({
                "border": "1px solid red"
            });
        }
        else {
            $('.clsInductionTime').css({
                "border": ""
            });
        }
        if ($('input[name="InductionLoc"]:checked').length == 0) {
            isValid = false;
            $('.clsInductionLoc').css({
                "border": "1px solid red"
            });
        }
        else {
            $('.clsInductionLoc').css({
                "border": ""
            });
        }
        if ($('input[name="InductionAmb"]:checked').length == 0) {
            isValid = false;
            $('.clsInductionAmb').css({
                "border": "1px solid red"
            });
        }
        else {
            $('.clsInductionAmb').css({
                "border": ""
            });
        }
        
        if ($('input[name="InductionFood"]:checked').length == 0) {
            isValid = false;
            $('.clsInductionFood').css({
                "border": "1px solid red"
            });
        }
        else {
            $('.clsInductionFood').css({
                "border": ""
            });
        }
        
        if ($('input[name="InductionStay"]:checked').length == 0) {
            isValid = false;
            $('.clsInductionStay').css({
                "border": "1px solid red"
            });
        }
        else {
            $('.clsInductionStay').css({
                "border": ""
            });
        }
        
       
        if (isValid == false) {
            $('#divFeedBackSpeakerErrors').empty();
            $('#divFeedBackSpeakerErrors').css('color', 'red');
            $('#divFeedBackSpeakerErrors').append("Highlighted fields are mandatory");
        }
        else {
            $('#divFeedBackSpeakerErrors').css('color', '');
            $('#divFeedBackSpeakerErrors').empty();
        }

        return isValid;
    }
    $('.RequiredField').change(function () {
        $(this).css({
            "border": ""
        });
    });
</script>

<script>
    var SelectID = "";
    function getBindData(ProgramID) {
        $("#tblFeedBackSpeakerBind").html("");
        jQuery.ajax({
            url: _spPageContextInfo.webAbsoluteUrl + "//_api/web/lists/getbytitle('InductionFeedbackSpeakerDetails')/items?$filter=ProgramName eq %27" + ProgramID + "%27&$orderby=ID%20desc",
            type: "GET",
            async: false,
            headers: {
                "accept": "application/json;odata=verbose",
                "content-type": "application/json;odata=verbose",
                "X-RequestDigest": $("#__REQUESTDIGEST").val()
            },
            success: function (d) {
                var arr = [];
                i = 0;
                $.each(d.d.results, function (index, results) {
                    if (results.Status == "Active" || results.Status == "Default" || results.Status == "SaveAsDraft") {
                        arr[i++] = index;
                    }
                });
                for (var j = 0; j < arr.length; j++) {
                    var arrConfigK = arr[j];
                    var index = parseInt(j + 1);

                    var ProgramName = d.d.results[arrConfigK].ProgramName;
                    var ProgramStartDate = d.d.results[arrConfigK].ProgramStartDate;
                    var ProgramEndDate = d.d.results[arrConfigK].ProgramEndDate;
                    var ProgramLocation = d.d.results[arrConfigK].ProgramLocation;
                    
                    var InductionUndt = d.d.results[arrConfigK].InductionUndt;
                    var InductionValInfo = d.d.results[arrConfigK].InductionValInfo;
                    var SpeakerID = d.d.results[arrConfigK].ID;
                    var InductionQueries = d.d.results[arrConfigK].InductionQueries;
                    var InductionTime = d.d.results[arrConfigK].InductionTime;
                    var InductionLoc = d.d.results[arrConfigK].InductionLoc;
                    var InductionAmb = d.d.results[arrConfigK].InductionAmb;
                    var InductionFood = d.d.results[arrConfigK].InductionFood;
                    var InductionStay = d.d.results[arrConfigK].InductionStay;
                    
                    
                    var SpeakerName = d.d.results[arrConfigK].SpeakerName;
                    var EmployeeName = d.d.results[arrConfigK].EmployeeName;
                    $("#tblFeedBackSpeakerBind").append("<tr><td style='display:none'>" + SpeakerID + "</td><td>" + index + "</td><td>" + ProgramName + "</td><td>" + ProgramStartDate + "</td><td >" + ProgramEndDate + "</td><td>" + SpeakerName + "</td><td >" + EmployeeName + "</td><td width='10%'><input type='button' data-toggle='modal'  data-edit='popup-1'data-val='" + SpeakerID + "' value='View' /></td><td width='10%'><input type='button'  data-delete='popup-1'data-val='" + SpeakerID + "' value='Remove'> </td></tr>");
                }

                $('[data-delete]').on('click', function (e) {
                    var DeleteCheck = false;
                    var a = confirm("Do you want to delete the selected employee manual feedback details?");
                    if (a == true) {
                        DeleteCheck = true;
                        a = true;
                    }
                    else {
                        DeleteCheck = false;
                        a = false;
                    }
                    if (DeleteCheck == true) {
                        SelectID = $(this).data('val');
                        var requestUri = _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getByTitle('InductionFeedbackSpeakerDetails')/items(" + SelectID + ")";
                        $.ajax({
                            url: requestUri,
                            type: "POST",
                            headers: {
                                "ACCEPT": "application/json;odata=verbose",
                                "content-type": "application/json;odata=verbose",
                                "X-RequestDigest": $("#__REQUESTDIGEST").val(),
                                "IF-MATCH": "*",
                                "X-HTTP-Method": "DELETE"
                            },
                            success: function (data) {
                                if (SelectID != "") {
                                    var ProgramName = $("#ddlProgramName").val();
                                    getBindData(ProgramName);
                                    getBindData_1(ProgramName);
                                }
                            },
                            error: function (error) {
                                alert(JSON.stringify(error));
                            },
                        });
                        e.preventDefault();
                    }
                });

                $('[data-edit]').on('click', function (e) {
                    $('.clearTextboxData').each(function () {
                        $(this).val('');
                    });
                    $(".PopUpcommonCSSForRadio").each(function (i) {
                        this.checked = false;
                    });

                    SelectID = $(this).data('val');
                    
                    var requestUri = _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getByTitle('InductionFeedbackSpeakerDetails')/items(" + SelectID + ")";
                    $.ajax({
                        url: requestUri,
                        type: "GET",
                        async: false,
                        headers: {
                            "accept": "application/json;odata=verbose",
                            "content-type": "application/json;odata=verbose",
                            "X-RequestDigest": $("#__REQUESTDIGEST").val()
                        },
                        success: function (d) {

if(d.d.ProgramName == ProgramID)
{
$('#myModalP').modal('show');
                            $('input[name=PopUpInductionUndt][value="' + d.d.InductionUndt + '"]').prop('checked', true);
                            $('input[name=PopUpInductionValInfo][value="' + d.d.InductionValInfo + '"]').prop('checked', true);

                            $('input[name=PopUpInductionQueries][value="' + d.d.InductionQueries + '"]').prop('checked', true);
                            $('input[name=PopUpInductionTime][value="' + d.d.InductionTime + '"]').prop('checked', true);
                            $('input[name=PopUpInductionLoc][value="' + d.d.InductionLoc + '"]').prop('checked', true);
                            $('input[name=PopUpInductionAmb][value="' + d.d.InductionAmb + '"]').prop('checked', true);
                            $('input[name=PopUpInductionFood][value="' + d.d.InductionFood + '"]').prop('checked', true);
							$('input[name=PopUpInductionStay][value="' + d.d.InductionStay + '"]').prop('checked', true);

                            $("#txtPopUpSpeakerName").val(d.d.SpeakerName);
                            $("#txtPopUpEmployeeName").val(d.d.EmployeeName);
                            $("#txtPopUpEmployeeCode").val(d.d.EmployeeCode);
                            $("#txtProgramLocation").val(d.d.ProgramLocation);
                            
                            $("#txtPopUpImprvPrgm").val(d.d.Suggestions);
                            $("#txtPopUpmostValAsp").val(d.d.MostAspects);
                            $("#txtPopUpLeastValAsp").val(d.d.LeastAspects);
                            $("#txtPopUpOvrallCmnt").val(d.d.Overall);
                            }
                        },
                        error: function () { console.log('fail'); }
                    });
                    
                    
                     var requestUri = _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getByTitle('InductionFeedback')/items(" + SelectID + ")";
                    $.ajax({
                        url: requestUri,
                        type: "GET",
                        async: false,
                        headers: {
                            "accept": "application/json;odata=verbose",
                            "content-type": "application/json;odata=verbose",
                            "X-RequestDigest": $("#__REQUESTDIGEST").val()
                        },
                        success: function (d) {

if(d.d.ProgramName == ProgramID)
{
$('#myModalP').modal('show');
                            $('input[name=PopUpInductionUndt][value="' + d.d.InductionUndt + '"]').prop('checked', true);
                            $('input[name=PopUpInductionValInfo][value="' + d.d.InductionValInfo + '"]').prop('checked', true);

                            $('input[name=PopUpInductionQueries][value="' + d.d.InductionQueries + '"]').prop('checked', true);
                            $('input[name=PopUpInductionTime][value="' + d.d.InductionTime + '"]').prop('checked', true);
                            $('input[name=PopUpInductionLoc][value="' + d.d.InductionLoc + '"]').prop('checked', true);
                            $('input[name=PopUpInductionAmb][value="' + d.d.InductionAmb + '"]').prop('checked', true);
                            $('input[name=PopUpInductionFood][value="' + d.d.InductionFood + '"]').prop('checked', true);                            
                            $('input[name=PopUpInductionStay][value="' + d.d.InductionStay + '"]').prop('checked', true);
                            
                            $("#txtPopUpSpeakerName").val(d.d.SpeakerName);
                            $("#txtPopUpEmployeeName").val(d.d.EmployeeName);
                            $("#txtPopUpEmployeeCode").val(d.d.EmployeeCode);
                            $("#txtProgramLocation").val(d.d.ProgramLocation);
                            
                            $("#txtPopUpImprvPrgm").val(d.d.Suggestions);
                            $("#txtPopUpmostValAsp").val(d.d.MostAspects);
                            $("#txtPopUpLeastValAsp").val(d.d.LeastAspects);
                             $("#txtPopUpOvrallCmnt").val(d.d.Overall);

                            }
                        },
                        error: function () { console.log('fail'); }
                    });
                    

                    
                });

            },
            error: function () { console.log('fail'); }
        });
    }
    $('#btnUpdateDetails').click(function () {
        if (checkValidationOnUpdate() && SelectID != '' && SelectID != null) {
            UpdateProgramDetaiails(SelectID);
            $('#myModalP').modal('hide');
        }
    });
    function checkValidationOnUpdate() {
        isValid = true;
        $('.PopUpRequiredField').each(function () {
            if ($.trim($(this).val()) == '' || $.trim($(this).val()) == '--Select Program--') {
                isValid = false;
                $(this).css({
                    "border": "1px solid red"
                });
            }
            else {
                $(this).css({
                    "border": ""
                });
            }
        });
        if ($('input[name="PopUpInductionUndt"]:checked').length == 0) {
            isValid = false;
            $('.clsPopUpInductionUndt').css({
                "border": "1px solid red"
            });
        }
        else {
            $('.clsPopUpInductionUndt').css({
                "border": ""
            });
        }
        if ($('input[name="PopUpInductionValInfo"]:checked').length == 0) {
            isValid = false;
            $('.PopUpclsInductionValInfo').css({
                "border": "1px solid red"
            });
        }
        else {
            $('.PopUpclsInductionValInfo').css({
                "border": ""
            });
        }
        if ($('input[name="PopUpInductionQueries"]:checked').length == 0) {
            isValid = false;
            $('.PopUpclsInductionQueries').css({
                "border": "1px solid red"
            });
        }
        else {
            $('.PopUpclsInductionQueries').css({
                "border": ""
            });
        }

        if ($('input[name="PopUpInductionTime"]:checked').length == 0) {
            isValid = false;
            $('.PopUpclsInductionTime').css({
                "border": "1px solid red"
            });
        }
        else {
            $('.PopUpclsInductionTime').css({
                "border": ""
            });
        }
        if ($('input[name="PopUpInductionLoc"]:checked').length == 0) {
            isValid = false;
            $('.PopUpclsInductionLoc').css({
                "border": "1px solid red"
            });
        }
        else {
            $('.PopUpclsInductionLoc').css({
                "border": ""
            });
        }
        if ($('input[name="PopUpInductionAmb"]:checked').length == 0) {
            isValid = false;
            $('.PopUpclsInductionAmb').css({
                "border": "1px solid red"
            });
        }
        else {
            $('.PopUpclsInductionAmb').css({
                "border": ""
            });
        }
        if ($('input[name="PopUpInductionFood"]:checked').length == 0) {
            isValid = false;
            $('.PopUpclsInductionFood').css({
                "border": "1px solid red"
            });
        }
        else {
            $('.PopUpclsInductionFood').css({
                "border": ""
            });
        }
        
        if ($('input[name="PopUpInductionStay"]:checked').length == 0) {
            isValid = false;
            $('.PopUpclsInductionStay').css({
                "border": "1px solid red"
            });
        }
        else {
            $('.PopUpclsInductionStay').css({
                "border": ""
            });
        }
        
       
        if (isValid == false) {
            $('#divUpdateErrors').empty();
            $('#divUpdateErrors').css('color', 'red');
            $('#divUpdateErrors').append("Highlighted fields are mandatory");
        }
        else {
            $('#divUpdateErrors').css('color', '');
            $('#divUpdateErrors').empty();
        }

        return isValid;
    }
    function UpdateProgramDetaiails(SelectID) {
    
    
        var InductionUndt = $('input[name=PopUpInductionUndt]:radio:checked').val();
        var InductionValInfo = $('input[name=PopUpInductionValInfo]:radio:checked').val();
        var InductionQueries = $('input[name=PopUpInductionQueries]:radio:checked').val();
        var InductionTime = $('input[name=PopUpInductionTime]:radio:checked').val();
        var InductionLoc = $('input[name=PopUpInductionLoct]:radio:checked').val();
        var InductionAmb = $('input[name=PopUpInductionAmb]:radio:checked').val();
        var InductionFood = $('input[name=PopUpInductionFood]:radio:checked').val();
        var InductionStay = $('input[name=PopUpInductionStay]:radio:checked').val();
        var SpeakerName = $("#txtPopUpSpeakerName").val();
        var EmployeeName = $("#txtPopUpEmployeeName").val();
        var EmployeeCode = $("#txtPopUpEmployeeCode").val();
        var CurrentLoginUser = LoginUserEmail();
        
        var Suggestions = $("#txtPopUpImprvPrgm").val();
        var MostAspects = $("#txtPopUpmostValAsp").val();
        var LeastAspects = $("#txtPopUpLeastValAsp").val();
        var Overall = $("#txtPopUpOvrallCmnt").val();


        $.ajax({
            url: _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getByTitle('InductionFeedbackSpeakerDetails')/items(" + SelectID + ")",
            type: "POST",
            data: JSON.stringify({
                '__metadata': { 'type': 'SP.Data.InductionFeedbackSpeakerDetailsListItem' },
                'InductionUndt': InductionUndt,
                'InductionValInfo': InductionValInfo,
                'InductionQueries': InductionQueries,
                'InductionTime': InductionTime,
                'InductionLoc': InductionLoc,
                'InductionAmb': InductionAmb,
                'InductionFood': InductionFood,
                'InductionStay': InductionStay,
                'Status': "Active",
                'CreatedByUser': CurrentLoginUser,
                'EmployeeCode': EmployeeCode,
                'Suggestions': Suggestions,
                'MostAspects': MostAspects,
                'LeastAspects': LeastAspects,
                'Overall': Overall
            }),
            headers: {
                "Accept": "application/json;odata=verbose",
                "content-type": "application/json; odata=verbose",
                "X-RequestDigest": $("#__REQUESTDIGEST").val(),
                "X-HTTP-Method": "MERGE",
                "If-Match": "*"
            },
            success: function (data) {
                alert('Program details updated successfully');
                
                
                var ProgramName = $('#ddlProgramName').val();
                getBindData(ProgramName);
                getBindData_1(ProgramName);

            },
            error: function (err) {
                alert("Error while adding item: " + JSON.stringify(err));
            }
        });
    }

    $('#btnSaveAsDraft').click(function () {
     if (validateGroup()) { 
        var ddlPName = $('#ddlProgramName').val();   
       $.blockUI.defaults.css = {		
											padding: 0,		
								            margin: 0,		
								            width: '30%',		
								            top: '40%',		
								            left: '35%',		
								            textAlign: 'center',
								            cursor: 'wait'};
								            
		       $.blockUI.defaults.overlayCSS.backgroundColor = '#fff';
		       $.blockUI.defaults.overlayCSS.opacity = 0.9;
		       $.blockUI.defaults.overlayCSS.cursor = 'pointer';
								            
		       
                $.blockUI({message: $('#throbber')});
                
                
                setTimeout(function () {
          
            SaveasDraftDetails();
            getBindData(ddlPName);
            $.unblockUI({
                onUnblock: function () {
                    alert('Program saved as draft successfully');
                    
                }
            });
        }, 600);
        }
    });
    function SaveasDraftDetails()
    {
        $("#tableFeedBackSpeaker tr:gt(0)").each(function () {
            var this_row = $(this);
            var FeedBackSpeakerID = $.trim(this_row.find('td:eq(0)').html());
            if (FeedBackSpeakerID != '' && FeedBackSpeakerID != null) {
                $.ajax({
                    url: _spPageContextInfo.webAbsoluteUrl + "//_api/web/lists/getbytitle('InductionFeedbackSpeakerDetails')/items(" + FeedBackSpeakerID + ")",
                    type: "POST",
                    async: false,
                    data: JSON.stringify({
                        '__metadata': { 'type': 'SP.Data.InductionFeedbackSpeakerDetailsListItem' },
                        'Status': 'SaveAsDraft'
                    }),
                    headers: {
                        "Accept": "application/json;odata=verbose",
                        "content-type": "application/json; odata=verbose",
                        "X-RequestDigest": $("#__REQUESTDIGEST").val(),
                        "X-HTTP-Method": "MERGE",
                        "If-Match": "*"
                    },
                    success: function (data) {
                    },
                    error: function (err) {
                        alert("Error while adding item: " + JSON.stringify(err));
                    }
                });
            }
        });
    }
    
    
    

    
    $("#btnSubmit").click(function () {
        $('#divErrorMessage').css('color', '');
        $('#divErrorMessage').empty();
        var Couunt = 0;
        var isvalid = true;
        var names = []
        
        $('.RequiredField').each(function () {
            if ($.trim($(this).val()) == '' || $.trim($(this).val()) == '--Select Program--') {
                isValid = false;
                $(this).css({
                    "border": "1px solid red"
                });
            }
            else {
                $(this).css({
                    "border": ""
                });
            }
        });

        $('input:radio').each(function () {
            var rname = $(this).attr('name');
            if ($.inArray(rname, names) == -1) names.push(rname);
        });
        var radioError = true;
        $.each(names, function (i, name) {
            var seq = name.match(/(\d+)/g)[0];//name[name.length - 1];
            var NameOfRadioButton = name.replace(/[0-9]/g, '');
            if ($('input[name="' + name + '"]:checked').length == 0) {
                radioError = false;
                NameOfRadioButton = name.replace(/[0-9]/g, ''); //name.substring(0, name.length - 1);
                if (NameOfRadioButton == 'ContentRelevance') {
                    $("#divErrorMessage").empty();
                    $('#divErrorMessage').css('color', 'red');
                    $('#divErrorMessage').append("Highlighted fields are mandatory");
                    $('.validationContent' + seq + '').css({ "border": "1px solid red" });
                }
                if (NameOfRadioButton == 'SpeakerAbility') {
                    $("#divErrorMessage").empty();
                    $('#divErrorMessage').css('color', 'red');
                    $('#divErrorMessage').append("Highlighted fields are mandatory");
                    $('.validationSpeaker' + seq + '').css({ "border": "1px solid red" });
                }
                if (NameOfRadioButton == 'OverallRating') {//new
                    $("#divErrorMessage").empty();
                    $('#divErrorMessage').css('color', 'red');
                    $('#divErrorMessage').append("Highlighted fields are mandatory");
                    $('.validationRating' + seq + '').css({ "border": "1px solid red" });
                }//end

            }
            else {
                if (NameOfRadioButton == 'ContentRelevance') {
                    $("#divErrorMessage").empty();
                    $('#divErrorMessage').css('color', '');
                    $('.validationContent' + seq + '').css({ "border": "" });
                }
                if (NameOfRadioButton == 'SpeakerAbility') {
                    $("#divErrorMessage").empty();
                    $('#divErrorMessage').css('color', '');
                    $('.validationSpeaker' + seq + '').css({ "border": "" });
                }
                 if (NameOfRadioButton == 'OverallRating') {//new
                    $("#divErrorMessage").empty();
                    $('#divErrorMessage').css('color', '');
                    $('.validationRating' + seq + '').css({ "border": "" });
                }//end

            }
        });
        $(".CandobetterValidation").each(function () {
            if ($(this).is(':hidden') == false && $(this).val() == '') {
            var seq = this.id;
           // $("#" + seq ).css({ "border": "" });
                //$('.CandobetterValidation').css({ "border": "1px solid red" });
                $("#" + seq).css({ "border": "1px solid red" });
                $("#divErrorMessage").empty();
                $('#divErrorMessage').css('color', 'red');
                $('#divErrorMessage').append("Highlighted fields are mandatory");
                Couunt++;
                return false;
            }
            else if ($(this).val() != '') {
            var seq = this.id;
                //$('.CandobetterValidation').css({ "border": "" });
                 $("#" + seq).css({ "border": "" });
               // $("#divErrorMessage").empty();
            }
        });
        
        
        if (Couunt == 0 && radioError == true) {
        
         $.blockUI.defaults.css = {		
											padding: 0,		
								            margin: 0,		
								            width: '30%',		
								            top: '40%',		
								            left: '35%',		
								            textAlign: 'center',
								            cursor: 'wait'};
								            
		       $.blockUI.defaults.overlayCSS.backgroundColor = '#fff';
		       $.blockUI.defaults.overlayCSS.opacity = 0.9;
		       $.blockUI.defaults.overlayCSS.cursor = 'pointer';
		       
		       
               $.blockUI({message: $('#throbber')});
               
                
                setTimeout(function () {

            if (arrSequnce.length > 0 && arrSaveActId.length > 0 && activityUniID.length > 0) {
                for (var i = 0; i < arrSequnce.length; i++) {
                    var ActUinqueID = activityUniID[i];
                    var actID = arrSaveActId[i];
                    var actName = arractivityName[i];
                    var SeqId = arrSequnce[i];
                    
                    var SpeakerAbility = $('input[type=radio][name=SpeakerAbility' + actID + ']:checked').attr('id');
                    var ContentRelevance = $('input[type=radio][name=ContentRelevance' + actID + ']:checked').attr('id');
                    var OverallRating = $('input[type=radio][name=OverallRating' + actID + ']:checked').attr('id');
                    
                    var SpekerAbValue = $('input[type=radio][name=SpeakerAbility' + actID + ']:checked').val();
                    var ContentRel = $('input[type=radio][name=ContentRelevance' + actID + ']:checked').val();
                    var OverallRatingVal = $('input[type=radio][name=OverallRating' + actID + ']:checked').val();
                    
                    
                    var Candobetter = $('#txtCanDoBetter' + actID + '').val();
                    if (SpeakerAbility == actID.toString()) {
                        var SpeakerName = ""; var SpeakerEmail = ""; var EmployeeCode = ""; var SpeakerDepartment = ""; var SpeakerName = "";
                        $.ajax({
                            url: _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('FeedBackDetails')/items?$filter=ActiviTyID eq %27" + actID + "%27",
                            type: "GET",
                            async: false,
                            headers: {
                                "accept": "application/json;odata=verbose",
                                "content-type": "application/json;odata=verbose",
                                "X-RequestDigest": $("#__REQUESTDIGEST").val()
                            },
                            success: function (d) {
                                //SpeakerName = d.d.results[0].NameOfTheSpeaker;
                                //SpeakerEmail = d.d.results[0].SpeakerEmail;
                                //SpeakerECode = d.d.results[0].EmployeeCode;
                                //SpeakerDepartment = d.d.results[0].SpeakerDepartment;

                                 var arr = [];
                                i2 = 0;
                                $.each(d.d.results, function (index, results) {
                                    if (results.Status == "Active") {
                                        arr[i2++] = index;
                                    }
                                });

                                for (var j = 0; j < arr.length; j++) {
                                      var arrConfigK = arr[j];
                                     //alert(arrConfigK);
                               
                                    var SpeakerName = d.d.results[arrConfigK].NameOfTheSpeaker;
                                    var SpeakerEmail = d.d.results[arrConfigK].SpeakerEmail;
                                    var SpeakerECode = d.d.results[arrConfigK].EmployeeCode;
                                    var SpeakerDepartment = d.d.results[arrConfigK].SpeakerDepartment;
                                    InsertFeedBack(actID, actName, arrSequnce, SpekerAbValue, ContentRel, OverallRatingVal, SpeakerName, SpeakerEmail, SpeakerECode, SpeakerDepartment, Candobetter, ActUinqueID);
                                    }
                            },
                            error: function () { console.log('fail'); }
                        });
                       // InsertFeedBack(actID, actName, arrSequnce, SpekerAbValue, ContentRel, SpeakerName, SpeakerEmail, SpeakerECode, SpeakerDepartment, Candobetter, ActUinqueID);
                    }
                }
            }
            var actDayDate = $('#divActivityName').val();
            var EmpCode = $('#txtEmployeeCode').val();
            var actDate = $('#divActivityName').val();
            var ProgramName = $('#ddlProgramName').val();
            var PgrmLocation = $('#txtProgramLocation').val();
            var EmpName =  $('#txtEmployeeName').val();

            var getUserUniqueID = GetMisReportUserUniqueID(actDayDate, EmpCode, ProgramName);
            if (getUserUniqueID != '' && getUserUniqueID != null) {
                UpdateMisReportUserDetails(getUserUniqueID);
            }
            //var qs = getQueryStrings();
            //var ProgramID = qs["InvitatioD"];
            //EmailDetailUpdate(ProgramID);
            var webappUrl = window.location.protocol + "//" + window.location.host + _spPageContextInfo.webServerRelativeUrl;
            
            $.ajax({
                    url: webappUrl + "//_api/web/lists/getbytitle('EmailNotification')/items",
                    type: "POST",
                    async: false,
                    data: JSON.stringify({
                        '__metadata': { 'type': 'SP.Data.EmailNotificationListItem' },
                        'Title': ProgramName,
                        'ProgramName': ProgramName,
                        'ProgramNameId': ProgramName,
                        'ProgramLocation': PgrmLocation,
                        'EmailTemplateId': '',
                        'EmailTemplateName': '',

                        'EmailTemplateBody': '',
                        'IsFeedBackRequired': 'Yes',
                        'ACTDayNo': actDayDate,
                        'Status': "Active",

                        'EmployeeCode': EmpCode,
                        'EmployeeName': EmpName,
                        'EmployeeEmailId': '',
                        'ParticipantEmail': '',
                        'FeedBackStatus': "Completed"
                        
                    }),
                    headers: {
                        "Accept": "application/json;odata=verbose",
                        "content-type": "application/json; odata=verbose",
                        "X-RequestDigest": $("#__REQUESTDIGEST").val(),
                    },
                    success: function (data) {
					alert('Feedback submitted sucessfully');
					window.location.reload();
                    //bootbox.alert("Feedback requests sent successfully");
                    },
                    error: function (err) {
                        alert("Error while adding item: " + JSON.stringify(err));
                    }
                });

            
            $.unblockUI({
                        onUnblock: function () {
                           console.log('');
                        }
                   });
                }, 600);
                
                
                

        }
    });
    
    
    var FeedBackUniqueID = ""; var BaseLocation = ""; var Department = "";

    var ProgramName; var ProgramInvitationID; var empCode; var EmployeeName; var EmpLocation;

        //var qs = getQueryStrings();
        //var ProgramID = qs["InvitatioD"];
        function InsertFeedBack(actID, actName, arrSequnce, SpekerAbValue, ContentRel, OverallRatingVal, SpeakerName, SpeakerEmail, SpeakerECode, SpeakerDepartment, Candobetter, ActUinqueID) {
            var EmployeeName = $('#txtEmployeeName').val();
            var EmployeeECode = $('#txtEmployeeCode').val();;
            var EmployeeBaseLocation = '';
            var intSequnce = parseInt(arrSequnce);
            var PgmSdate = $('#txtProgramStartDate').val();;
            var PgmEdate = $('#txtProgramEndDate').val();;
            var actStartDay = $('#divActivityName').val();
            var appWebUrl = _spPageContextInfo.webAbsoluteUrl;
            var ProgramName = $('#ddlProgramName').val();

                $.ajax({
                    async: false,
                    url: appWebUrl + "/_api/web/lists/getbytitle('FeedBackTransactionDetails')/items",
                    type: "POST",
                    data: JSON.stringify({
                        '__metadata': { 'type': 'SP.Data.FeedBackTransactionDetailsListItem' },
                        'EmployeeCode': EmployeeECode,
                        'EmployeeName': EmployeeName,
                        'EmpLocation': EmployeeBaseLocation,
                        'ProgramName': ProgramName,
                        'ActivityID': actID,
                        'ActivityName': actName,
                        'SpeakerDepartment': SpeakerDepartment,
                        'SpeakerName': SpeakerName,
                        'SpeakerECode': SpeakerECode,
                        'SpeakerEmail': SpeakerEmail,
                        'Sequnce': intSequnce,
                        'ActivityDay': actStartDay,
                        'ContentRelevance': ContentRel,
                        'SpeakerAbility': SpekerAbValue,
                        'OverallRating': OverallRatingVal,
                        'CanDoBetter': Candobetter,
                        'Status': "Completed",
                        'ProgramStartDate': PgmSdate,
                        'ProgramEndDate': PgmEdate
                    }),
                    headers: {

                        "Accept": "application/json;odata=verbose",
                        "content-type": "application/json; odata=verbose",
                        "X-RequestDigest": $("#__REQUESTDIGEST").val(),
                    },
                    success: function (data) {
                        if (ActUinqueID != "") {
                            InductionProgramStatus(ActUinqueID);
                        }
                    },
                    error: function (err) {
                        alert("Error while adding item: " + JSON.stringify(err));
                    }
                });
        }
 
    
    
    
    function UpdateMisReportUserDetails(getUserUniqueID) {
        $.ajax({
            url: _spPageContextInfo.webServerRelativeUrl + "/_api/web/lists/getbytitle('MISReportForInvities')/items(" + getUserUniqueID + ")",
            type: "POST",
            async: false,
            data: JSON.stringify({
                '__metadata': { 'type': 'SP.Data.MISReportForInvitiesListItem' },
                'FeedBackStatus': "Completed",
            }),
            headers: {
                "Accept": "application/json;odata=verbose",
                "content-type": "application/json; odata=verbose",
                "X-RequestDigest": $("#__REQUESTDIGEST").val(),
                "X-HTTP-Method": "MERGE",
                "If-Match": "*"
            },
            success: function (data) {
            },
            error: function (err) {
                alert("Error while adding item: " + JSON.stringify(err));
            }
        });
    }
   
    
    function InductionProgramStatus(actID) {
        $.ajax({
            url: _spPageContextInfo.webServerRelativeUrl + "/_api/web/lists/getbytitle('NewInductionProgram')/items(" + actID + ")",
            type: "POST",
            async: false,
            data: JSON.stringify({
                '__metadata': { 'type': 'SP.Data.NewInductionProgramListItem' },
                'FeedBackStatus': "Completed",
            }),
            headers: {
                "Accept": "application/json;odata=verbose",
                "content-type": "application/json; odata=verbose",
                "X-RequestDigest": $("#__REQUESTDIGEST").val(),
                "X-HTTP-Method": "MERGE",
                "If-Match": "*"
            },
            success: function (data) {
            },
            error: function (err) {
                alert("Error while adding item: " + JSON.stringify(err));
            }
        });
    }
    
    
    function GetMisReportUserUniqueID(actDayDate, EmpCode, ProgramName) {
        var UniqueId = '';
        var RestUrl = _spPageContextInfo.siteAbsoluteUrl + "/_api/web/lists/getbytitle('MISReportForInvities')/items?$filter=Attendance eq 'Y' and EmpCode%20eq%20%27" + EmpCode + "%27and%20ProgramName%20eq%20%27" + ProgramName + "%27 and Day eq '" + actDayDate + "'";
        $.ajax({
            url: RestUrl,
            method: "GET",
            async: false,
            headers: {
                "accept": "application/json;odata=verbose",
            },
            success: function (d) {
                UniqueId = d.d.results[0].ID;
            },
            error: function () { console.log('fail'); }
        });
        return UniqueId;
    }


    
</script>


<script>
$("#txtEmployeeCode").change(function () {
         var EmpCode = document.getElementById("txtEmployeeCode").value.trim(/^\s+|\s+$/g, '');
         var selectedProgramName = $('#ddlProgramName').val();
         var Actday = $('#divActivityName').val();
         //var ProgramName = $('#ProgramNameDynDropDown').val();
         
        var validempcode = CheckValidEmpCd(EmpCode,selectedProgramName)     
		var OvrallFeedbck= GetOverAllFeedbck(EmpCode,selectedProgramName,Actday);
		//var OverallMAnFeedback = GetOverAllManFeedbck(EmpCode,selectedProgramName);
		
		if(validempcode <= 0)
		{
		 alert('Please enter only the participants employee code who have participated in the program');
		 

		 $('#txtEmployeeCode').val('');
         $('#btnSubmit').hide();
		}
		else if(OvrallFeedbck > 0)
         {                      
         alert('Feedback already submitted for the entered employee code');
         
         $('#txtEmployeeCode').val('');
         $('#btnSubmit').hide();
         }
         else
         {
          $('#btnSubmit').show();
         }
             

    });
    

</script>

<script>

function CheckValidEmpCd(EmpCode,selectedProgramName) {
        var CheckValidEmpCdCount = 0;
        
         var RestUrl = _spPageContextInfo.siteAbsoluteUrl + "/_api/web/lists/getbytitle('Invitation')/items?$filter=EmployeeCode eq '" + EmpCode + "' and ProgramName eq '" + selectedProgramName + "' and Confirmation eq 'Yes'";
        $.ajax({
            url: RestUrl,
            method: "GET",
            async: false,
            headers: {
                "accept": "application/json;odata=verbose",
            },
            success: function (d) {
                var arr = [];
                i = 0;
                $.each(d.d.results, function (index, results) {
                   
                        arr[i++] = index;
                   
                });
                
                if(arr.length > 0)
                {
                CheckValidEmpCdCount =arr.length;
                }
            },
            error: function () { console.log('fail'); }
        });

return CheckValidEmpCdCount ;
}


function GetOverAllFeedbck(EmpCode,selectedProgramName,Actday) {
        var OverallFdbckCount = 0;
        
         var RestUrl = _spPageContextInfo.siteAbsoluteUrl + "/_api/web/lists/getbytitle('EmailNotification')/items?$filter=EmployeeCode eq '" + EmpCode + "' and ProgramName eq '" + selectedProgramName + "' and ACTDayNo eq '" + Actday + "'";
        $.ajax({
            url: RestUrl,
            method: "GET",
            async: false,
            headers: {
                "accept": "application/json;odata=verbose",
            },
            success: function (d) {
                var arr = [];
                i = 0;
                $.each(d.d.results, function (index, results) {
                    if (results.FeedBackStatus == "Completed") {
                        arr[i++] = index;
                    }
                });
                
                if(arr.length > 0)
                {
                OverallFdbckCount =arr.length;
                }
            },
            error: function () { console.log('fail'); }
        });

return OverallFdbckCount ;
}


</script>

<script>

     


</script>



